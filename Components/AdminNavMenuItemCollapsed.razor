@inject NavigationManager Navigation

<button class="@GetCssClass()" @onclick="@(() => Navigation.NavigateTo(Href))" title="@GetTooltipText()">
    @GetIcon()
</button>

@code {
    [Parameter] public string Href { get; set; } = "";
    [Parameter] public string Icon { get; set; } = "";

    private string GetCssClass()
    {
        var currentPath = Navigation.ToBaseRelativePath(Navigation.Uri);
        var isActive = (Href == "" && currentPath == "") || (Href != "" && currentPath.StartsWith(Href));

        return isActive
            ? "p-2 rounded-lg bg-blue-600 text-white shadow-lg transition duration-150 ease-in-out"
            : "p-2 rounded-lg hover:bg-gray-200 transition duration-150 ease-in-out";
    }

    private string GetTooltipText()
    {
        return Icon switch
        {
            "chart" => "Dashboard",
            "users" => "Manage Users",
            "categories" => "Manage Categories",
            "permissions" => "User Permissions",
            "profile" => "Profile",
            _ => "Menu Item"
        };
    }

    private RenderFragment GetIcon() => __builder =>
    {
        <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            @switch (Icon.ToLower())
            {
                case "chart":
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                    break;
                case "users":
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
                    break;
                case "categories":
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                    break;
                case "permissions":
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                    break;
                case "profile":
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                    break;
                default:
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path>
                    break;
            }
        </svg>
    };
}