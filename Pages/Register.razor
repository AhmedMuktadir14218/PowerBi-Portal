@page "/register"
@using CRUD_Employee_standAlone.Models
@using CRUD_Employee_standAlone.Services
@inject AuthService AuthService
@inject NavigationManager Navigation

<div class="min-h-screen bg-gray-100 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
        <div>
            <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
                Create your account
            </h2>
        </div>
        <div class="bg-white p-8 rounded-lg shadow-md">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">
                    @errorMessage
                </div>
            }

            @if (!string.IsNullOrEmpty(successMessage))
            {
                <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4">
                    @successMessage
                </div>
            }

            <EditForm Model="registerModel" OnValidSubmit="HandleRegister" class="space-y-6">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-red-600" />

                <div>
                    <label for="username" class="block text-sm font-medium text-gray-700">Username</label>
                    <InputText id="username" @bind-Value="registerModel.Username"
                               class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" />
                </div>

                <div>
                    <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                    <InputText id="email" type="email" @bind-Value="registerModel.Email"
                               class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" />
                </div>

                <div>
                    <label for="fullname" class="block text-sm font-medium text-gray-700">Full Name</label>
                    <InputText id="fullname" @bind-Value="registerModel.FullName"
                               class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" />
                </div>

                <div>
                    <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
                    <InputText id="password" type="password" @bind-Value="registerModel.Password"
                               class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" />
                </div>

                <div>
                    <button type="submit" disabled="@isLoading"
                            class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50">
                        @if (isLoading)
                        {
                            <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                            </svg>
                        }
                        Register
                    </button>
                </div>

                <div class="text-center">
                    <a href="/login" class="text-blue-600 hover:text-blue-500">
                        Already have an account? Sign in
                    </a>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private RegisterRequest registerModel = new();
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;
    private bool isLoading = false;

    private async Task HandleRegister()
    {
        isLoading = true;
        errorMessage = string.Empty;
        successMessage = string.Empty;

        try
        {
            var result = await AuthService.RegisterAsync(registerModel);

            if (result)
            {
                successMessage = "Registration successful! You can now login.";
                registerModel = new RegisterRequest(); // Reset form
                await Task.Delay(2000); // Show success message
                Navigation.NavigateTo("/login");
            }
            else
            {
                errorMessage = "Registration failed. Please check your information and try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred during registration. Please try again.";
            Console.WriteLine($"Registration error: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}